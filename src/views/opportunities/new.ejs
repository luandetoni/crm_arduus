<!DOCTYPE html>
<html lang="pt-BR">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title><%= title %></title>
    <!-- Google Fonts - Poppins -->
    <link href="https://fonts.googleapis.com/css2?family=Poppins:wght@300;400;500;600;700&display=swap" rel="stylesheet">
    <!-- Font Awesome -->
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css">
    <!-- Main CSS -->
    <link rel="stylesheet" href="/css/style.css">
    <!-- Favicon -->
    <link rel="icon" type="image/png" href="/images/favicon.png">
</head>
<body>
    <div class="dashboard">
        <%- include('../partials/sidebar') %>
        
        <div class="main-content">
            <%- include('../partials/header') %>
            
            <div class="content">
                <div class="d-flex align-center justify-between mb-20">
                    <h1 class="page-title">Nova Oportunidade</h1>
                    <div>
                        <a href="/opportunities" class="btn btn-primary">
                            <i class="fas fa-arrow-left"></i> Voltar
                        </a>
                    </div>
                </div>
                
                <form id="newOpportunityForm">
                    <div class="form-card">
                        <div class="form-section">
                            <h3 class="form-section-title">Informações Básicas</h3>
                            
                            <div class="form-row">
                                <div class="form-col">
                                    <div class="form-group">
                                        <label for="title" class="form-label">Título *</label>
                                        <input type="text" id="title" name="title" class="form-control" required>
                                    </div>
                                </div>
                                
                                <div class="form-col">
                                    <div class="form-group">
                                        <label for="customer" class="form-label">Cliente *</label>
                                        <select id="customer" name="customer" class="form-control" required>
                                            <option value="">Selecione um cliente</option>
                                            <option value="1">João Silva (Silva & Cia)</option>
                                            <option value="2">Ana Santos</option>
                                            <option value="3">Tech Solutions</option>
                                        </select>
                                    </div>
                                </div>
                            </div>
                            
                            <div class="form-row">
                                <div class="form-col">
                                    <div class="form-group">
                                        <label for="value" class="form-label">Valor *</label>
                                        <input type="text" id="value" name="value" class="form-control" placeholder="R$ 0,00" required>
                                    </div>
                                </div>
                                
                                <div class="form-col">
                                    <div class="form-group">
                                        <label for="stage" class="form-label">Estágio *</label>
                                        <select id="stage" name="stage" class="form-control" required>
                                            <option value="prospect">Prospecção</option>
                                            <option value="qualification">Qualificação</option>
                                            <option value="proposal">Proposta</option>
                                            <option value="negotiation">Negociação</option>
                                            <option value="closing">Fechamento</option>
                                            <option value="lost">Perdida</option>
                                        </select>
                                    </div>
                                </div>
                            </div>
                            
                            <div class="form-row">
                                <div class="form-col">
                                    <div class="form-group">
                                        <label for="probability" class="form-label">Probabilidade (%)</label>
                                        <input type="number" id="probability" name="probability" class="form-control" min="0" max="100" value="50">
                                    </div>
                                </div>
                                
                                <div class="form-col">
                                    <div class="form-group">
                                        <label for="expectedCloseDate" class="form-label">Data Prevista de Fechamento *</label>
                                        <input type="date" id="expectedCloseDate" name="expectedCloseDate" class="form-control" required>
                                    </div>
                                </div>
                            </div>
                        </div>
                        
                        <div class="form-section">
                            <h3 class="form-section-title">Descrição & Detalhes</h3>
                            
                            <div class="form-row">
                                <div class="form-col">
                                    <div class="form-group">
                                        <label for="description" class="form-label">Descrição</label>
                                        <textarea id="description" name="description" class="form-control" rows="4"></textarea>
                                    </div>
                                </div>
                            </div>
                            
                            <div class="form-row">
                                <div class="form-col">
                                    <div class="form-group">
                                        <label for="source" class="form-label">Origem</label>
                                        <select id="source" name="source" class="form-control">
                                            <option value="indicacao">Indicação</option>
                                            <option value="website">Website</option>
                                            <option value="midia_social">Mídia Social</option>
                                            <option value="ligacao_fria">Ligação fria</option>
                                            <option value="evento">Evento</option>
                                            <option value="parceiro">Parceiro</option>
                                            <option value="outro">Outro</option>
                                        </select>
                                    </div>
                                </div>
                                
                                <div class="form-col">
                                    <div class="form-group">
                                        <label for="assignedTo" class="form-label">Responsável</label>
                                        <select id="assignedTo" name="assignedTo" class="form-control">
                                            <option value="">Selecione um responsável</option>
                                            <option value="1">Vendedor 1</option>
                                            <option value="2">Vendedor 2</option>
                                            <option value="3">Gerente de Vendas</option>
                                        </select>
                                    </div>
                                </div>
                            </div>
                        </div>
                        
                        <div class="form-section">
                            <h3 class="form-section-title">Produtos</h3>
                            
                            <div class="table-responsive mb-20">
                                <table class="table" id="productsTable">
                                    <thead>
                                        <tr>
                                            <th>Produto</th>
                                            <th>Preço Unitário</th>
                                            <th>Quantidade</th>
                                            <th>Desconto (%)</th>
                                            <th>Total</th>
                                            <th>Ações</th>
                                        </tr>
                                    </thead>
                                    <tbody>
                                        <!-- Os produtos serão adicionados aqui dinamicamente -->
                                    </tbody>
                                    <tfoot>
                                        <tr>
                                            <td colspan="4" class="text-right"><strong>Subtotal:</strong></td>
                                            <td>R$ 0,00</td>
                                            <td></td>
                                        </tr>
                                        <tr>
                                            <td colspan="4" class="text-right"><strong>Desconto Total:</strong></td>
                                            <td>R$ 0,00</td>
                                            <td></td>
                                        </tr>
                                        <tr>
                                            <td colspan="4" class="text-right"><strong>Total:</strong></td>
                                            <td>R$ 0,00</td>
                                            <td></td>
                                        </tr>
                                    </tfoot>
                                </table>
                            </div>
                            
                            <button type="button" id="addProductBtn" class="btn btn-primary">
                                <i class="fas fa-plus"></i> Adicionar Produto
                            </button>
                        </div>
                        
                        <div class="form-section">
                            <h3 class="form-section-title">Concorrentes</h3>
                            
                            <div id="competitorsContainer">
                                <!-- Os concorrentes serão adicionados aqui dinamicamente -->
                            </div>
                            
                            <button type="button" id="addCompetitorBtn" class="btn btn-primary mt-10">
                                <i class="fas fa-plus"></i> Adicionar Concorrente
                            </button>
                        </div>
                        
                        <div class="form-actions">
                            <button type="button" class="btn btn-secondary" onclick="window.location.href='/opportunities'">Cancelar</button>
                            <button type="submit" class="btn btn-primary">Salvar Oportunidade</button>
                        </div>
                    </div>
                </form>
            </div>
        </div>
    </div>

    <!-- Template para linha de produto -->
    <template id="productRowTemplate">
        <tr class="product-row">
            <td>
                <select name="products[{index}][product]" class="form-control product-select" required>
                    <option value="">Selecione um produto</option>
                    <option value="1">Produto A</option>
                    <option value="2">Produto B</option>
                    <option value="3">Produto C</option>
                </select>
            </td>
            <td>
                <input type="text" name="products[{index}][price]" class="form-control product-price" placeholder="R$ 0,00" readonly>
            </td>
            <td>
                <input type="number" name="products[{index}][quantity]" class="form-control product-quantity" value="1" min="1">
            </td>
            <td>
                <input type="number" name="products[{index}][discount]" class="form-control product-discount" value="0" min="0" max="100">
            </td>
            <td>
                <input type="text" class="form-control product-total" value="R$ 0,00" readonly>
            </td>
            <td>
                <button type="button" class="btn-icon remove-product"><i class="fas fa-trash"></i></button>
            </td>
        </tr>
    </template>

    <!-- Template para concorrente -->
    <template id="competitorTemplate">
        <div class="competitor-item mb-15">
            <div class="form-row">
                <div class="form-col">
                    <div class="form-group">
                        <label class="form-label">Nome da Empresa</label>
                        <input type="text" name="competitors[{index}][name]" class="form-control">
                    </div>
                </div>
                <div class="form-col">
                    <div class="form-group">
                        <label class="form-label">Força</label>
                        <select name="competitors[{index}][strength]" class="form-control">
                            <option value="low">Baixa</option>
                            <option value="medium">Média</option>
                            <option value="high">Alta</option>
                        </select>
                    </div>
                </div>
                <div class="form-col" style="flex: 0 0 50px; align-self: flex-end;">
                    <div class="form-group">
                        <label class="form-label">&nbsp;</label>
                        <button type="button" class="btn-icon remove-competitor"><i class="fas fa-trash"></i></button>
                    </div>
                </div>
            </div>
        </div>
    </template>

    <!-- jQuery (necessário para alguns plugins Bootstrap) -->
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <!-- Main JavaScript -->
    <script src="/js/main.js"></script>
    <script>
        // Script específico para formulário de nova oportunidade
        $(document).ready(function() {
            // Verificar se há um estágio pré-selecionado na URL
            const urlParams = new URLSearchParams(window.location.search);
            const stageParam = urlParams.get('stage');
            
            if (stageParam) {
                $('#stage').val(stageParam);
                // Atualizar probabilidade com base no estágio
                const stage = $('#stage').val();
                let probability = 50;
                
                switch(stage) {
                    case 'prospect': probability = 10; break;
                    case 'qualification': probability = 30; break;
                    case 'proposal': probability = 50; break;
                    case 'negotiation': probability = 70; break;
                    case 'closing': probability = 90; break;
                    case 'lost': probability = 0; break;
                }
                
                $('#probability').val(probability);
            }
            
            // Data atual na data esperada de fechamento
            const today = new Date();
            const oneMonthLater = new Date(today);
            oneMonthLater.setMonth(today.getMonth() + 1);
            
            const formattedDate = oneMonthLater.toISOString().split('T')[0];
            $('#expectedCloseDate').val(formattedDate);
            
            // Atualizar estágio baseado na probabilidade
            $('#probability').on('input', function() {
                const probability = parseInt($(this).val());
                
                if (probability < 20) {
                    $('#stage').val('prospect');
                } else if (probability < 40) {
                    $('#stage').val('qualification');
                } else if (probability < 60) {
                    $('#stage').val('proposal');
                } else if (probability < 80) {
                    $('#stage').val('negotiation');
                } else {
                    $('#stage').val('closing');
                }
            });
            
            // Atualizar probabilidade baseado no estágio
            $('#stage').change(function() {
                const stage = $(this).val();
                let probability = 50;
                
                switch(stage) {
                    case 'prospect':
                        probability = 10;
                        break;
                    case 'qualification':
                        probability = 30;
                        break;
                    case 'proposal':
                        probability = 50;
                        break;
                    case 'negotiation':
                        probability = 70;
                        break;
                    case 'closing':
                        probability = 90;
                        break;
                    case 'lost':
                        probability = 0;
                        break;
                }
                
                $('#probability').val(probability);
            });
            
            // Formatação de moeda para o campo valor
            $('#value').on('input', function() {
                let value = $(this).val().replace(/\D/g, '');
                if (value === '') return;
                
                value = parseInt(value);
                $(this).val(formatCurrency(value / 100));
            });
            
            // Adicionar produto
            let productIndex = 0;
            
            $('#addProductBtn').click(function() {
                addProductRow();
            });
            
            function addProductRow() {
                const template = $('#productRowTemplate').html();
                const newRow = template.replace(/{index}/g, productIndex);
                
                $('#productsTable tbody').append(newRow);
                
                // Event listeners para a nova linha
                const $newRow = $('#productsTable tbody tr').last();
                
                $newRow.find('.product-select').change(function() {
                    const productId = $(this).val();
                    if (!productId) return;
                    
                    // Simulação - em produção você buscaria esses dados do servidor
                    const prices = {
                        '1': 1000,
                        '2': 1500,
                        '3': 2500
                    };
                    
                    const price = prices[productId] || 0;
                    $(this).closest('tr').find('.product-price').val(formatCurrency(price));
                    
                    updateProductTotal($(this).closest('tr'));
                    updateTotals();
                });
                
                $newRow.find('.product-quantity, .product-discount').on('input', function() {
                    updateProductTotal($(this).closest('tr'));
                    updateTotals();
                });
                
                $newRow.find('.remove-product').click(function() {
                    $(this).closest('tr').remove();
                    updateTotals();
                });
                
                productIndex++;
            }
            
            function updateProductTotal($row) {
                const priceText = $row.find('.product-price').val();
                const price = parseCurrency(priceText);
                const quantity = parseInt($row.find('.product-quantity').val()) || 0;
                const discount = parseInt($row.find('.product-discount').val()) || 0;
                
                const total = price * quantity * (1 - discount / 100);
                $row.find('.product-total').val(formatCurrency(total));
            }
            
            function updateTotals() {
                let subtotal = 0;
                let totalDiscount = 0;
                
                $('#productsTable tbody tr').each(function() {
                    const priceText = $(this).find('.product-price').val();
                    const price = parseCurrency(priceText);
                    const quantity = parseInt($(this).find('.product-quantity').val()) || 0;
                    const discount = parseInt($(this).find('.product-discount').val()) || 0;
                    
                    const rowSubtotal = price * quantity;
                    const rowDiscount = rowSubtotal * (discount / 100);
                    
                    subtotal += rowSubtotal;
                    totalDiscount += rowDiscount;
                });
                
                const total = subtotal - totalDiscount;
                
                $('#productsTable tfoot tr:eq(0) td:eq(1)').text(formatCurrency(subtotal));
                $('#productsTable tfoot tr:eq(1) td:eq(1)').text(formatCurrency(totalDiscount));
                $('#productsTable tfoot tr:eq(2) td:eq(1)').text(formatCurrency(total));
                
                // Atualiza o campo valor com o total
                $('#value').val(formatCurrency(total));
            }
            
            // Adicionar concorrente
            let competitorIndex = 0;
            
            $('#addCompetitorBtn').click(function() {
                addCompetitor();
            });
            
            function addCompetitor() {
                const template = $('#competitorTemplate').html();
                const newCompetitor = template.replace(/{index}/g, competitorIndex);
                
                $('#competitorsContainer').append(newCompetitor);
                
                // Event listener para remover
                $('#competitorsContainer .competitor-item').last().find('.remove-competitor').click(function() {
                    $(this).closest('.competitor-item').remove();
                });
                
                competitorIndex++;
            }
            
            // Parse de string de moeda para número
            function parseCurrency(value) {
                return parseFloat(value.replace(/[^\d,.-]/g, '').replace(',', '.')) || 0;
            }
            
            // Formatar número como moeda
            function formatCurrency(value) {
                return 'R$ ' + value.toFixed(2).replace('.', ',').replace(/(\d)(?=(\d{3})+,)/g, '$1.');
            }
            
            // Submit form
            $('#newOpportunityForm').submit(function(e) {
                e.preventDefault();
                
                // Coleta dados do formulário
                const formData = {};
                $(this).serializeArray().forEach(item => {
                    if (item.name.includes('[')) {
                        // Handle array fields (products, competitors)
                        const matches = item.name.match(/([a-z]+)\[([0-9]+)\]\[([a-z]+)\]/);
                        if (matches) {
                            const [, arrayName, index, property] = matches;
                            
                            if (!formData[arrayName]) {
                                formData[arrayName] = [];
                            }
                            
                            if (!formData[arrayName][index]) {
                                formData[arrayName][index] = {};
                            }
                            
                            formData[arrayName][index][property] = item.value;
                        }
                    } else {
                        formData[item.name] = item.value;
                    }
                });
                
                // Clean up arrays (convert from object with numeric keys to actual array)
                if (formData.products) {
                    formData.products = Object.values(formData.products);
                }
                
                if (formData.competitors) {
                    formData.competitors = Object.values(formData.competitors);
                }
                
                console.log('Dados da oportunidade:', formData);
                
                // Em uma aplicação real, você faria:
                // createOpportunity(formData)
                //    .then(response => {
                //        window.location.href = `/opportunities/${response._id}`;
                //    })
                //    .catch(error => {
                //        console.error('Erro ao criar oportunidade:', error);
                //        showNotification('Erro ao criar oportunidade', 'error');
                //    });
                
                // Por enquanto, redirecionamos para a lista
                setTimeout(() => {
                    window.location.href = '/opportunities';
                }, 1000);
            });
            
            // Adicione uma linha de produto inicial
            addProductRow();
        });
    </script>
</body>
</html>